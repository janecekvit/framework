 == exception ==
exception.h, test_exception.cpp
-> DONE,

== extensions ==
finally.h, test_finally.cpp
-> DONE, 

lazy.h, test_lazy.cpp
-> DONE, 

 == storage ==
heterogenous_container.h, test_heterogenous_container.cpp
-> updade exception that use also the exception.h, check functionallity

parameter_pack.h, test_parameter_pack.cpp
-> DONE

resource_wrapper.h, resource_wrapper.cpp
-> fix compilation when no libconcepts are present

 == synchronization ==
 signal.h, test_signal.cpp
 -> DONE (fix compilation when no libconcepts are present)


 == tracing == 
trace.h, test_trace.cpp
-> DONE

TODO:
- Check concurrent and atomic_concurrent
- add tests wait for multiple signals
- wait for multime signals  with concepts
- Finish extensions.h cleanup
- rewrite sync
- Rewrite and fix thread
- use this c++23 in all files
- Rewrite asserts that use good style (expected value, actual value)
- Better formatting
- Create readme.md
- Minimum supported version c++17 -> test it